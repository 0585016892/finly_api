const express = require("express");
const router = express.Router();
const db = require("../db");

// üìå GET /api/sizes?page=&limit= => L·∫•y danh s√°ch size c√≥ ph√¢n trang
router.get("/", async (req, res) => {
  const page = parseInt(req.query.page) || 1;
  const limit = parseInt(req.query.limit) || 5;
  const offset = (page - 1) * limit;

  try {
    const [[{ total }]] = await db
      .promise()
      .query("SELECT COUNT(*) AS total FROM sizes");
    const [sizes] = await db
      .promise()
      .query("SELECT * FROM sizes LIMIT ? OFFSET ?", [limit, offset]);

    res.json({
      data: sizes,
      currentPage: page,
      totalPages: Math.ceil(total / limit),
      total,
    });
  } catch (err) {
    console.error("L·ªói truy v·∫•n size:", err);
    res.status(500).json({ error: "L·ªói server" });
  }
});

// üìå GET /api/sizes/all => L·∫•y to√†n b·ªô size
router.get("/all", async (req, res) => {
  try {
    const [results] = await db.promise().query("SELECT * FROM sizes");
    res.json(results);
  } catch (err) {
    console.error("L·ªói truy v·∫•n t·∫•t c·∫£ size:", err);
    res.status(500).json({ error: "L·ªói server" });
  }
});

// üìå POST /api/sizes => Th√™m size m·ªõi
router.post("/", async (req, res) => {
  const { name, active } = req.body;

  if (!name || !active) {
    return res.status(400).json({ error: "Thi·∫øu t√™n size ho·∫∑c tr·∫°ng th√°i" });
  }

  try {
    const [result] = await db
      .promise()
      .query("INSERT INTO sizes (name, active) VALUES (?, ?)", [name, active]);
    res.json({ message: "Th√™m size th√†nh c√¥ng", id: result.insertId });
  } catch (err) {
    console.error("L·ªói th√™m size:", err);
    res.status(500).json({ error: "L·ªói khi th√™m size" });
  }
});

// üìå PUT /api/sizes/:id => C·∫≠p nh·∫≠t size
router.put("/:id", async (req, res) => {
  const { id } = req.params;
  const { name, active } = req.body;

  if (!name || !active) {
    return res.status(400).json({ error: "Thi·∫øu t√™n size ho·∫∑c tr·∫°ng th√°i" });
  }

  try {
    const [result] = await db
      .promise()
      .query("UPDATE sizes SET name = ?, active = ? WHERE id = ?", [
        name,
        active,
        id,
      ]);

    if (result.affectedRows === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y size" });
    }

    res.json({ message: "C·∫≠p nh·∫≠t size th√†nh c√¥ng" });
  } catch (err) {
    console.error("L·ªói c·∫≠p nh·∫≠t size:", err);
    res.status(500).json({ error: "L·ªói khi c·∫≠p nh·∫≠t size" });
  }
});

// üìå DELETE /api/sizes/:id => Xo√° size
router.delete("/:id", async (req, res) => {
  const { id } = req.params;

  try {
    const [result] = await db
      .promise()
      .query("DELETE FROM sizes WHERE id = ?", [id]);

    if (result.affectedRows === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y size" });
    }

    res.json({ message: "Xo√° size th√†nh c√¥ng" });
  } catch (err) {
    console.error("L·ªói xo√° size:", err);
    res.status(500).json({ error: "L·ªói khi xo√° size" });
  }
});

module.exports = router;
