const express = require("express");
const router = express.Router();
const db = require("../db");

// üìå GET /api/sizes?page=&limit= => L·∫•y danh s√°ch size c√≥ ph√¢n trang
router.get("/", (req, res) => {
  const page = parseInt(req.query.page) || 1;
  const limit = parseInt(req.query.limit) || 5;
  const offset = (page - 1) * limit;

  const countQuery = "SELECT COUNT(*) AS total FROM sizes";
  const dataQuery = "SELECT * FROM sizes LIMIT ? OFFSET ?";

  db.query(countQuery, (err, countResult) => {
    if (err) return res.status(500).json({ error: "L·ªói ƒë·∫øm d·ªØ li·ªáu" });

    const total = countResult[0].total;
    const totalPages = Math.ceil(total / limit);

    db.query(dataQuery, [limit, offset], (err, results) => {
      if (err) return res.status(500).json({ error: "L·ªói truy v·∫•n d·ªØ li·ªáu" });

      res.json({
        data: results,
        currentPage: page,
        totalPages,
        total,
      });
    });
  });
});

// üìå GET /api/sizes/all => L·∫•y to√†n b·ªô size
router.get("/all", (req, res) => {
  db.query("SELECT * FROM sizes", (err, results) => {
    if (err) return res.status(500).json({ error: "L·ªói truy v·∫•n d·ªØ li·ªáu" });
    res.json(results);
  });
});

// üìå POST /api/sizes => Th√™m size m·ªõi
router.post("/", (req, res) => {
  const { name, active } = req.body;
  if (!name || !active)
    return res.status(400).json({ error: "Thi·∫øu t√™n size ho·∫∑c tr·∫°ng th√°i" });

  db.query(
    "INSERT INTO sizes (name, active) VALUES (?, ?)",
    [name, active],
    (err, result) => {
      if (err) return res.status(500).json({ error: "L·ªói khi th√™m size" });

      res.json({ message: "Th√™m size th√†nh c√¥ng", id: result.insertId });
    }
  );
});

// üìå PUT /api/sizes/:id => C·∫≠p nh·∫≠t size
router.put("/:id", (req, res) => {
  const { id } = req.params;
  const { name, active } = req.body;
  if (!name || !active)
    return res.status(400).json({ error: "Thi·∫øu t√™n size ho·∫∑c tr·∫°ng th√°i" });

  db.query(
    "UPDATE sizes SET name = ?, active = ? WHERE id = ?",
    [name, active, id],
    (err, result) => {
      if (err) return res.status(500).json({ error: "L·ªói khi c·∫≠p nh·∫≠t size" });

      if (result.affectedRows === 0)
        return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y size" });

      res.json({ message: "C·∫≠p nh·∫≠t size th√†nh c√¥ng" });
    }
  );
});

// üìå DELETE /api/sizes/:id => Xo√° size
router.delete("/:id", (req, res) => {
  const { id } = req.params;

  db.query("DELETE FROM sizes WHERE id = ?", [id], (err, result) => {
    if (err) return res.status(500).json({ error: "L·ªói khi xo√° size" });

    if (result.affectedRows === 0)
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y size" });

    res.json({ message: "Xo√° size th√†nh c√¥ng" });
  });
});

module.exports = router;
